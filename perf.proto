syntax = "proto3";

package sink;

option go_package = "internal";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message ResultID {
  string task_name = 1;
  int32 execution = 2;
  string test_name = 3;
  string parent = 4;
  repeated string tags = 5;
  map<string, int32> arguments = 6;
}

message MetricsSeriesStart {
  ResultID id = 1;
  string source_path = 3;
  StorageLocation location = 4;
}

enum StorageLocation {
  UNKNOWN = 0;

  SINK_S3 = 1;
  PROJECT_S3 = 2;
  GRIDFS = 3;
  EPHEMERAL = 4;
}

message MetricsSeriesEnd {
  string id = 1;
  bool is_complete = 2;
}

message MetricsResponse {
  string id = 1;
  bool success = 2;
}

message SendResponse {
  string id = 1;
  bool success = 2;
  int64 count = 3;
}

message MetricsPoint {
  int64 size = 1;
  int64 count = 2;
  int64 workers = 3;
  google.protobuf.Duration duration = 4;
  google.protobuf.Timestamp ts = 5;
}

message MetricsEvent {
  string id = 1;
  repeated MetricsPoint Event = 3;
}

service SinkPerformanceMetrics {
  rpc CreateMetricSeries(MetricsSeriesStart) returns (MetricsResponse);
  rpc SendMetrics(stream MetricsEvent) returns (SendResponse);
  rpc CloseMetrics(MetricsSeriesEnd) returns (MetricsResponse);
}
