// Code generated by protoc-gen-go. DO NOT EDIT.
// source: perf.proto

package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResultID struct {
	TaskName             string           `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Execution            int32            `protobuf:"varint,2,opt,name=execution,proto3" json:"execution,omitempty"`
	TestName             string           `protobuf:"bytes,3,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	Parent               string           `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Tags                 []string         `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Arguments            map[string]int32 `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResultID) Reset()         { *m = ResultID{} }
func (m *ResultID) String() string { return proto.CompactTextString(m) }
func (*ResultID) ProtoMessage()    {}
func (*ResultID) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{0}
}
func (m *ResultID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultID.Unmarshal(m, b)
}
func (m *ResultID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultID.Marshal(b, m, deterministic)
}
func (dst *ResultID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultID.Merge(dst, src)
}
func (m *ResultID) XXX_Size() int {
	return xxx_messageInfo_ResultID.Size(m)
}
func (m *ResultID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultID.DiscardUnknown(m)
}

var xxx_messageInfo_ResultID proto.InternalMessageInfo

func (m *ResultID) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *ResultID) GetExecution() int32 {
	if m != nil {
		return m.Execution
	}
	return 0
}

func (m *ResultID) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *ResultID) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ResultID) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ResultID) GetArguments() map[string]int32 {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type MetricsSeriesStart struct {
	Id                   *ResultID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SampleRateDur        int64     `protobuf:"varint,2,opt,name=sample_rate_dur,json=sampleRateDur,proto3" json:"sample_rate_dur,omitempty"`
	SourcePath           string    `protobuf:"bytes,3,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricsSeriesStart) Reset()         { *m = MetricsSeriesStart{} }
func (m *MetricsSeriesStart) String() string { return proto.CompactTextString(m) }
func (*MetricsSeriesStart) ProtoMessage()    {}
func (*MetricsSeriesStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{1}
}
func (m *MetricsSeriesStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsSeriesStart.Unmarshal(m, b)
}
func (m *MetricsSeriesStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsSeriesStart.Marshal(b, m, deterministic)
}
func (dst *MetricsSeriesStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSeriesStart.Merge(dst, src)
}
func (m *MetricsSeriesStart) XXX_Size() int {
	return xxx_messageInfo_MetricsSeriesStart.Size(m)
}
func (m *MetricsSeriesStart) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSeriesStart.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSeriesStart proto.InternalMessageInfo

func (m *MetricsSeriesStart) GetId() *ResultID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MetricsSeriesStart) GetSampleRateDur() int64 {
	if m != nil {
		return m.SampleRateDur
	}
	return 0
}

func (m *MetricsSeriesStart) GetSourcePath() string {
	if m != nil {
		return m.SourcePath
	}
	return ""
}

type MetricsSeriesEnd struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsComplete           bool     `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsSeriesEnd) Reset()         { *m = MetricsSeriesEnd{} }
func (m *MetricsSeriesEnd) String() string { return proto.CompactTextString(m) }
func (*MetricsSeriesEnd) ProtoMessage()    {}
func (*MetricsSeriesEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{2}
}
func (m *MetricsSeriesEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsSeriesEnd.Unmarshal(m, b)
}
func (m *MetricsSeriesEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsSeriesEnd.Marshal(b, m, deterministic)
}
func (dst *MetricsSeriesEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSeriesEnd.Merge(dst, src)
}
func (m *MetricsSeriesEnd) XXX_Size() int {
	return xxx_messageInfo_MetricsSeriesEnd.Size(m)
}
func (m *MetricsSeriesEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSeriesEnd.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSeriesEnd proto.InternalMessageInfo

func (m *MetricsSeriesEnd) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsSeriesEnd) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

type MetricsResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{3}
}
func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (dst *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(dst, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SendResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{4}
}
func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (dst *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(dst, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MetricsPoint struct {
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Workers              int64    `protobuf:"varint,3,opt,name=workers,proto3" json:"workers,omitempty"`
	Duration             int64    `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsPoint) Reset()         { *m = MetricsPoint{} }
func (m *MetricsPoint) String() string { return proto.CompactTextString(m) }
func (*MetricsPoint) ProtoMessage()    {}
func (*MetricsPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{5}
}
func (m *MetricsPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsPoint.Unmarshal(m, b)
}
func (m *MetricsPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsPoint.Marshal(b, m, deterministic)
}
func (dst *MetricsPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsPoint.Merge(dst, src)
}
func (m *MetricsPoint) XXX_Size() int {
	return xxx_messageInfo_MetricsPoint.Size(m)
}
func (m *MetricsPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsPoint.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsPoint proto.InternalMessageInfo

func (m *MetricsPoint) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MetricsPoint) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MetricsPoint) GetWorkers() int64 {
	if m != nil {
		return m.Workers
	}
	return 0
}

func (m *MetricsPoint) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type MetricsEvent struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Interval             int32           `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Event                []*MetricsPoint `protobuf:"bytes,3,rep,name=Event,proto3" json:"Event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricsEvent) Reset()         { *m = MetricsEvent{} }
func (m *MetricsEvent) String() string { return proto.CompactTextString(m) }
func (*MetricsEvent) ProtoMessage()    {}
func (*MetricsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f415a6daa3c0fb09, []int{6}
}
func (m *MetricsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsEvent.Unmarshal(m, b)
}
func (m *MetricsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsEvent.Marshal(b, m, deterministic)
}
func (dst *MetricsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsEvent.Merge(dst, src)
}
func (m *MetricsEvent) XXX_Size() int {
	return xxx_messageInfo_MetricsEvent.Size(m)
}
func (m *MetricsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsEvent proto.InternalMessageInfo

func (m *MetricsEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsEvent) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *MetricsEvent) GetEvent() []*MetricsPoint {
	if m != nil {
		return m.Event
	}
	return nil
}

func init() {
	proto.RegisterType((*ResultID)(nil), "sink.ResultID")
	proto.RegisterMapType((map[string]int32)(nil), "sink.ResultID.ArgumentsEntry")
	proto.RegisterType((*MetricsSeriesStart)(nil), "sink.MetricsSeriesStart")
	proto.RegisterType((*MetricsSeriesEnd)(nil), "sink.MetricsSeriesEnd")
	proto.RegisterType((*MetricsResponse)(nil), "sink.MetricsResponse")
	proto.RegisterType((*SendResponse)(nil), "sink.SendResponse")
	proto.RegisterType((*MetricsPoint)(nil), "sink.MetricsPoint")
	proto.RegisterType((*MetricsEvent)(nil), "sink.MetricsEvent")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SinkPerformanceMetricsClient is the client API for SinkPerformanceMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SinkPerformanceMetricsClient interface {
	CreateMetricSeries(ctx context.Context, in *MetricsSeriesStart, opts ...grpc.CallOption) (*MetricsResponse, error)
	SendMetrics(ctx context.Context, opts ...grpc.CallOption) (SinkPerformanceMetrics_SendMetricsClient, error)
	CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error)
}

type sinkPerformanceMetricsClient struct {
	cc *grpc.ClientConn
}

func NewSinkPerformanceMetricsClient(cc *grpc.ClientConn) SinkPerformanceMetricsClient {
	return &sinkPerformanceMetricsClient{cc}
}

func (c *sinkPerformanceMetricsClient) CreateMetricSeries(ctx context.Context, in *MetricsSeriesStart, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/sink.SinkPerformanceMetrics/CreateMetricSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sinkPerformanceMetricsClient) SendMetrics(ctx context.Context, opts ...grpc.CallOption) (SinkPerformanceMetrics_SendMetricsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SinkPerformanceMetrics_serviceDesc.Streams[0], "/sink.SinkPerformanceMetrics/SendMetrics", opts...)
	if err != nil {
		return nil, err
	}
	x := &sinkPerformanceMetricsSendMetricsClient{stream}
	return x, nil
}

type SinkPerformanceMetrics_SendMetricsClient interface {
	Send(*MetricsEvent) error
	CloseAndRecv() (*SendResponse, error)
	grpc.ClientStream
}

type sinkPerformanceMetricsSendMetricsClient struct {
	grpc.ClientStream
}

func (x *sinkPerformanceMetricsSendMetricsClient) Send(m *MetricsEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sinkPerformanceMetricsSendMetricsClient) CloseAndRecv() (*SendResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sinkPerformanceMetricsClient) CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/sink.SinkPerformanceMetrics/CloseMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SinkPerformanceMetricsServer is the server API for SinkPerformanceMetrics service.
type SinkPerformanceMetricsServer interface {
	CreateMetricSeries(context.Context, *MetricsSeriesStart) (*MetricsResponse, error)
	SendMetrics(SinkPerformanceMetrics_SendMetricsServer) error
	CloseMetrics(context.Context, *MetricsSeriesEnd) (*MetricsResponse, error)
}

func RegisterSinkPerformanceMetricsServer(s *grpc.Server, srv SinkPerformanceMetricsServer) {
	s.RegisterService(&_SinkPerformanceMetrics_serviceDesc, srv)
}

func _SinkPerformanceMetrics_CreateMetricSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsSeriesStart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkPerformanceMetricsServer).CreateMetricSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sink.SinkPerformanceMetrics/CreateMetricSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkPerformanceMetricsServer).CreateMetricSeries(ctx, req.(*MetricsSeriesStart))
	}
	return interceptor(ctx, in, info, handler)
}

func _SinkPerformanceMetrics_SendMetrics_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SinkPerformanceMetricsServer).SendMetrics(&sinkPerformanceMetricsSendMetricsServer{stream})
}

type SinkPerformanceMetrics_SendMetricsServer interface {
	SendAndClose(*SendResponse) error
	Recv() (*MetricsEvent, error)
	grpc.ServerStream
}

type sinkPerformanceMetricsSendMetricsServer struct {
	grpc.ServerStream
}

func (x *sinkPerformanceMetricsSendMetricsServer) SendAndClose(m *SendResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sinkPerformanceMetricsSendMetricsServer) Recv() (*MetricsEvent, error) {
	m := new(MetricsEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SinkPerformanceMetrics_CloseMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsSeriesEnd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkPerformanceMetricsServer).CloseMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sink.SinkPerformanceMetrics/CloseMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkPerformanceMetricsServer).CloseMetrics(ctx, req.(*MetricsSeriesEnd))
	}
	return interceptor(ctx, in, info, handler)
}

var _SinkPerformanceMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sink.SinkPerformanceMetrics",
	HandlerType: (*SinkPerformanceMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetricSeries",
			Handler:    _SinkPerformanceMetrics_CreateMetricSeries_Handler,
		},
		{
			MethodName: "CloseMetrics",
			Handler:    _SinkPerformanceMetrics_CloseMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMetrics",
			Handler:       _SinkPerformanceMetrics_SendMetrics_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "perf.proto",
}

func init() { proto.RegisterFile("perf.proto", fileDescriptor_perf_f415a6daa3c0fb09) }

var fileDescriptor_perf_f415a6daa3c0fb09 = []byte{
	// 544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4b, 0x8f, 0xd3, 0x3e,
	0x10, 0x57, 0x92, 0xb6, 0xff, 0x66, 0xda, 0x7f, 0x77, 0x65, 0x41, 0x15, 0x95, 0xc7, 0x56, 0x39,
	0xa0, 0x9c, 0x7a, 0x28, 0x07, 0x10, 0x0b, 0x07, 0xe8, 0xf6, 0xc0, 0x81, 0x55, 0xe5, 0xde, 0xb8,
	0x54, 0x26, 0x99, 0xdd, 0xb5, 0x9a, 0x3a, 0x91, 0xed, 0x14, 0x16, 0x89, 0x0f, 0xc0, 0x27, 0xe4,
	0xeb, 0xa0, 0xd8, 0x6e, 0xda, 0xf0, 0x38, 0x70, 0xcb, 0xcc, 0xf8, 0xf7, 0x98, 0x87, 0x02, 0x50,
	0xa2, 0xbc, 0x99, 0x95, 0xb2, 0xd0, 0x05, 0xe9, 0x28, 0x2e, 0xb6, 0xf1, 0x77, 0x1f, 0xfa, 0x14,
	0x55, 0x95, 0xeb, 0xf7, 0x57, 0xe4, 0x11, 0x84, 0x9a, 0xa9, 0xed, 0x46, 0xb0, 0x1d, 0x46, 0xde,
	0xd4, 0x4b, 0x42, 0xda, 0xaf, 0x13, 0xd7, 0x6c, 0x87, 0xe4, 0x31, 0x84, 0xf8, 0x05, 0xd3, 0x4a,
	0xf3, 0x42, 0x44, 0xfe, 0xd4, 0x4b, 0xba, 0xf4, 0x98, 0x30, 0x50, 0x54, 0xda, 0x42, 0x03, 0x07,
	0x45, 0xa5, 0x0d, 0x74, 0x0c, 0xbd, 0x92, 0x49, 0x14, 0x3a, 0xea, 0x98, 0x8a, 0x8b, 0x08, 0x81,
	0x8e, 0x66, 0xb7, 0x2a, 0xea, 0x4e, 0x83, 0x24, 0xa4, 0xe6, 0x9b, 0x5c, 0x42, 0xc8, 0xe4, 0x6d,
	0xb5, 0x43, 0xa1, 0x55, 0xd4, 0x9b, 0x06, 0xc9, 0x60, 0xfe, 0x64, 0x56, 0x5b, 0x9d, 0x1d, 0x6c,
	0xce, 0xde, 0x1e, 0xea, 0x4b, 0xa1, 0xe5, 0x3d, 0x3d, 0xbe, 0x9f, 0xbc, 0x86, 0x51, 0xbb, 0x48,
	0xce, 0x21, 0xd8, 0xe2, 0xbd, 0x6b, 0xa6, 0xfe, 0x24, 0x0f, 0xa0, 0xbb, 0x67, 0x79, 0x85, 0xae,
	0x07, 0x1b, 0xbc, 0xf2, 0x5f, 0x7a, 0xf1, 0x37, 0x20, 0x1f, 0x50, 0x4b, 0x9e, 0xaa, 0x35, 0x4a,
	0x8e, 0x6a, 0xad, 0x99, 0xd4, 0xe4, 0x29, 0xf8, 0x3c, 0x33, 0x04, 0x83, 0xf9, 0xa8, 0xed, 0x84,
	0xfa, 0x3c, 0x23, 0xcf, 0xe0, 0x4c, 0xb1, 0x5d, 0x99, 0xe3, 0x46, 0x32, 0x8d, 0x9b, 0xac, 0x92,
	0x86, 0x39, 0xa0, 0xff, 0xdb, 0x34, 0x65, 0x1a, 0xaf, 0x2a, 0x49, 0x2e, 0x60, 0xa0, 0x8a, 0x4a,
	0xa6, 0xb8, 0x29, 0x99, 0xbe, 0x73, 0x33, 0x02, 0x9b, 0x5a, 0x31, 0x7d, 0x17, 0x2f, 0xe0, 0xbc,
	0x25, 0xbf, 0x14, 0x19, 0x19, 0x35, 0xe2, 0xa1, 0x11, 0xbb, 0x80, 0x01, 0x57, 0x9b, 0xb4, 0xa8,
	0x89, 0xb5, 0x6d, 0xa1, 0x4f, 0x81, 0xab, 0x85, 0xcb, 0xc4, 0x97, 0x70, 0xe6, 0x48, 0x28, 0xaa,
	0xb2, 0x10, 0x0a, 0x7f, 0xe3, 0x88, 0xe0, 0x3f, 0x55, 0xa5, 0x29, 0x2a, 0xe5, 0xf0, 0x87, 0x30,
	0xbe, 0x86, 0xe1, 0x1a, 0x45, 0xf6, 0xef, 0xc8, 0x7a, 0xa8, 0x69, 0x51, 0x09, 0x6d, 0xda, 0x0a,
	0xa8, 0x0d, 0x62, 0x01, 0x43, 0x67, 0x66, 0x55, 0x70, 0xbb, 0x6f, 0xc5, 0xbf, 0xda, 0xd3, 0x0a,
	0xa8, 0xf9, 0x3e, 0x22, 0xfd, 0x13, 0x64, 0xad, 0xf4, 0xb9, 0x90, 0x5b, 0x94, 0xca, 0x31, 0x1e,
	0x42, 0x32, 0x81, 0x7e, 0x56, 0x49, 0x66, 0xae, 0xb0, 0x63, 0x4a, 0x4d, 0x1c, 0x67, 0x8d, 0xde,
	0x72, 0x5f, 0xdf, 0xd7, 0xaf, 0xfe, 0x27, 0xd0, 0xe7, 0x42, 0xa3, 0xdc, 0xb3, 0xdc, 0x6d, 0xbf,
	0x89, 0x49, 0x02, 0x5d, 0x03, 0x8a, 0x02, 0x73, 0x73, 0xc4, 0x6e, 0xfa, 0xd4, 0x3e, 0xb5, 0x0f,
	0xe6, 0x3f, 0x3c, 0x18, 0xaf, 0xb9, 0xd8, 0xae, 0x50, 0xde, 0x14, 0x72, 0xc7, 0x44, 0x8a, 0xee,
	0x19, 0x59, 0x02, 0x59, 0x48, 0x64, 0xda, 0x25, 0xec, 0x1e, 0x49, 0xd4, 0xe2, 0x3a, 0xb9, 0xad,
	0xc9, 0xc3, 0x56, 0xa5, 0x99, 0xfb, 0x0b, 0x18, 0xd4, 0x7b, 0x38, 0xb0, 0xb6, 0xbd, 0x18, 0x13,
	0x13, 0x97, 0x3b, 0x5d, 0x57, 0xe2, 0x91, 0x37, 0x30, 0x5c, 0xe4, 0x85, 0x6a, 0xfc, 0x8c, 0xff,
	0xa0, 0xbc, 0x14, 0xd9, 0x5f, 0x74, 0xdf, 0xc1, 0x47, 0x3b, 0x0f, 0xc1, 0xf2, 0x4f, 0x3d, 0xf3,
	0x97, 0x78, 0xfe, 0x33, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x34, 0x58, 0xcc, 0x33, 0x04, 0x00, 0x00,
}
