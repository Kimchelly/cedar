// Code generated by protoc-gen-go. DO NOT EDIT.
// source: perf.proto

package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StorageLocation int32

const (
	StorageLocation_UNKNOWN    StorageLocation = 0
	StorageLocation_SINK_S3    StorageLocation = 1
	StorageLocation_PROJECT_S3 StorageLocation = 2
	StorageLocation_GRIDFS     StorageLocation = 3
	StorageLocation_EPHEMERAL  StorageLocation = 4
)

var StorageLocation_name = map[int32]string{
	0: "UNKNOWN",
	1: "SINK_S3",
	2: "PROJECT_S3",
	3: "GRIDFS",
	4: "EPHEMERAL",
}
var StorageLocation_value = map[string]int32{
	"UNKNOWN":    0,
	"SINK_S3":    1,
	"PROJECT_S3": 2,
	"GRIDFS":     3,
	"EPHEMERAL":  4,
}

func (x StorageLocation) String() string {
	return proto.EnumName(StorageLocation_name, int32(x))
}
func (StorageLocation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{0}
}

type DataFormat int32

const (
	DataFormat_TEXT DataFormat = 0
	DataFormat_FTDC DataFormat = 1
	DataFormat_BSON DataFormat = 2
	DataFormat_JSON DataFormat = 3
	DataFormat_CSV  DataFormat = 4
)

var DataFormat_name = map[int32]string{
	0: "TEXT",
	1: "FTDC",
	2: "BSON",
	3: "JSON",
	4: "CSV",
}
var DataFormat_value = map[string]int32{
	"TEXT": 0,
	"FTDC": 1,
	"BSON": 2,
	"JSON": 3,
	"CSV":  4,
}

func (x DataFormat) String() string {
	return proto.EnumName(DataFormat_name, int32(x))
}
func (DataFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{1}
}

type CompressionType int32

const (
	CompressionType_NONE  CompressionType = 0
	CompressionType_TARGZ CompressionType = 1
	CompressionType_ZIP   CompressionType = 2
	CompressionType_GZ    CompressionType = 3
	CompressionType_XZ    CompressionType = 4
)

var CompressionType_name = map[int32]string{
	0: "NONE",
	1: "TARGZ",
	2: "ZIP",
	3: "GZ",
	4: "XZ",
}
var CompressionType_value = map[string]int32{
	"NONE":  0,
	"TARGZ": 1,
	"ZIP":   2,
	"GZ":    3,
	"XZ":    4,
}

func (x CompressionType) String() string {
	return proto.EnumName(CompressionType_name, int32(x))
}
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{2}
}

type ResultID struct {
	TaskName             string           `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Execution            int32            `protobuf:"varint,2,opt,name=execution,proto3" json:"execution,omitempty"`
	TestName             string           `protobuf:"bytes,3,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	Parent               string           `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Tags                 []string         `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Arguments            map[string]int32 `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResultID) Reset()         { *m = ResultID{} }
func (m *ResultID) String() string { return proto.CompactTextString(m) }
func (*ResultID) ProtoMessage()    {}
func (*ResultID) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{0}
}
func (m *ResultID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultID.Unmarshal(m, b)
}
func (m *ResultID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultID.Marshal(b, m, deterministic)
}
func (dst *ResultID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultID.Merge(dst, src)
}
func (m *ResultID) XXX_Size() int {
	return xxx_messageInfo_ResultID.Size(m)
}
func (m *ResultID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultID.DiscardUnknown(m)
}

var xxx_messageInfo_ResultID proto.InternalMessageInfo

func (m *ResultID) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *ResultID) GetExecution() int32 {
	if m != nil {
		return m.Execution
	}
	return 0
}

func (m *ResultID) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *ResultID) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ResultID) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ResultID) GetArguments() map[string]int32 {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type MetricsSeriesStart struct {
	Id                   *ResultID       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourcePath           string          `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	Artifacts            []*ArtifactInfo `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricsSeriesStart) Reset()         { *m = MetricsSeriesStart{} }
func (m *MetricsSeriesStart) String() string { return proto.CompactTextString(m) }
func (*MetricsSeriesStart) ProtoMessage()    {}
func (*MetricsSeriesStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{1}
}
func (m *MetricsSeriesStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsSeriesStart.Unmarshal(m, b)
}
func (m *MetricsSeriesStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsSeriesStart.Marshal(b, m, deterministic)
}
func (dst *MetricsSeriesStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSeriesStart.Merge(dst, src)
}
func (m *MetricsSeriesStart) XXX_Size() int {
	return xxx_messageInfo_MetricsSeriesStart.Size(m)
}
func (m *MetricsSeriesStart) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSeriesStart.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSeriesStart proto.InternalMessageInfo

func (m *MetricsSeriesStart) GetId() *ResultID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MetricsSeriesStart) GetSourcePath() string {
	if m != nil {
		return m.SourcePath
	}
	return ""
}

func (m *MetricsSeriesStart) GetArtifacts() []*ArtifactInfo {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type ArtifactInfo struct {
	Location             StorageLocation `protobuf:"varint,1,opt,name=location,proto3,enum=sink.StorageLocation" json:"location,omitempty"`
	Bucket               string          `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path                 string          `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Format               DataFormat      `protobuf:"varint,4,opt,name=format,proto3,enum=sink.DataFormat" json:"format,omitempty"`
	Compression          CompressionType `protobuf:"varint,5,opt,name=compression,proto3,enum=sink.CompressionType" json:"compression,omitempty"`
	Tags                 []string        `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ArtifactInfo) Reset()         { *m = ArtifactInfo{} }
func (m *ArtifactInfo) String() string { return proto.CompactTextString(m) }
func (*ArtifactInfo) ProtoMessage()    {}
func (*ArtifactInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{2}
}
func (m *ArtifactInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactInfo.Unmarshal(m, b)
}
func (m *ArtifactInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactInfo.Marshal(b, m, deterministic)
}
func (dst *ArtifactInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactInfo.Merge(dst, src)
}
func (m *ArtifactInfo) XXX_Size() int {
	return xxx_messageInfo_ArtifactInfo.Size(m)
}
func (m *ArtifactInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactInfo proto.InternalMessageInfo

func (m *ArtifactInfo) GetLocation() StorageLocation {
	if m != nil {
		return m.Location
	}
	return StorageLocation_UNKNOWN
}

func (m *ArtifactInfo) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ArtifactInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ArtifactInfo) GetFormat() DataFormat {
	if m != nil {
		return m.Format
	}
	return DataFormat_TEXT
}

func (m *ArtifactInfo) GetCompression() CompressionType {
	if m != nil {
		return m.Compression
	}
	return CompressionType_NONE
}

func (m *ArtifactInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MetricsSeriesEnd struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsComplete           bool     `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsSeriesEnd) Reset()         { *m = MetricsSeriesEnd{} }
func (m *MetricsSeriesEnd) String() string { return proto.CompactTextString(m) }
func (*MetricsSeriesEnd) ProtoMessage()    {}
func (*MetricsSeriesEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{3}
}
func (m *MetricsSeriesEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsSeriesEnd.Unmarshal(m, b)
}
func (m *MetricsSeriesEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsSeriesEnd.Marshal(b, m, deterministic)
}
func (dst *MetricsSeriesEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSeriesEnd.Merge(dst, src)
}
func (m *MetricsSeriesEnd) XXX_Size() int {
	return xxx_messageInfo_MetricsSeriesEnd.Size(m)
}
func (m *MetricsSeriesEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSeriesEnd.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSeriesEnd proto.InternalMessageInfo

func (m *MetricsSeriesEnd) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsSeriesEnd) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

type MetricsResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{4}
}
func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (dst *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(dst, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type SendResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{5}
}
func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (dst *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(dst, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MetricsPoint struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Counters             *MetricsCounters     `protobuf:"bytes,2,opt,name=counters,proto3" json:"counters,omitempty"`
	Timers               *MetricsTimers       `protobuf:"bytes,3,opt,name=timers,proto3" json:"timers,omitempty"`
	State                *MetricsState        `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetricsPoint) Reset()         { *m = MetricsPoint{} }
func (m *MetricsPoint) String() string { return proto.CompactTextString(m) }
func (*MetricsPoint) ProtoMessage()    {}
func (*MetricsPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{6}
}
func (m *MetricsPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsPoint.Unmarshal(m, b)
}
func (m *MetricsPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsPoint.Marshal(b, m, deterministic)
}
func (dst *MetricsPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsPoint.Merge(dst, src)
}
func (m *MetricsPoint) XXX_Size() int {
	return xxx_messageInfo_MetricsPoint.Size(m)
}
func (m *MetricsPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsPoint.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsPoint proto.InternalMessageInfo

func (m *MetricsPoint) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *MetricsPoint) GetCounters() *MetricsCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *MetricsPoint) GetTimers() *MetricsTimers {
	if m != nil {
		return m.Timers
	}
	return nil
}

func (m *MetricsPoint) GetState() *MetricsState {
	if m != nil {
		return m.State
	}
	return nil
}

type MetricsCounters struct {
	Ops                  int64    `protobuf:"varint,1,opt,name=ops,proto3" json:"ops,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Errors               int64    `protobuf:"varint,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsCounters) Reset()         { *m = MetricsCounters{} }
func (m *MetricsCounters) String() string { return proto.CompactTextString(m) }
func (*MetricsCounters) ProtoMessage()    {}
func (*MetricsCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{7}
}
func (m *MetricsCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsCounters.Unmarshal(m, b)
}
func (m *MetricsCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsCounters.Marshal(b, m, deterministic)
}
func (dst *MetricsCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsCounters.Merge(dst, src)
}
func (m *MetricsCounters) XXX_Size() int {
	return xxx_messageInfo_MetricsCounters.Size(m)
}
func (m *MetricsCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsCounters proto.InternalMessageInfo

func (m *MetricsCounters) GetOps() int64 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *MetricsCounters) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MetricsCounters) GetErrors() int64 {
	if m != nil {
		return m.Errors
	}
	return 0
}

type MetricsTimers struct {
	Duration             *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Waiting              *duration.Duration `protobuf:"bytes,2,opt,name=waiting,proto3" json:"waiting,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MetricsTimers) Reset()         { *m = MetricsTimers{} }
func (m *MetricsTimers) String() string { return proto.CompactTextString(m) }
func (*MetricsTimers) ProtoMessage()    {}
func (*MetricsTimers) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{8}
}
func (m *MetricsTimers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsTimers.Unmarshal(m, b)
}
func (m *MetricsTimers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsTimers.Marshal(b, m, deterministic)
}
func (dst *MetricsTimers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsTimers.Merge(dst, src)
}
func (m *MetricsTimers) XXX_Size() int {
	return xxx_messageInfo_MetricsTimers.Size(m)
}
func (m *MetricsTimers) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsTimers.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsTimers proto.InternalMessageInfo

func (m *MetricsTimers) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *MetricsTimers) GetWaiting() *duration.Duration {
	if m != nil {
		return m.Waiting
	}
	return nil
}

type MetricsState struct {
	Failed               bool     `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty"`
	Workers              int64    `protobuf:"varint,2,opt,name=workers,proto3" json:"workers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsState) Reset()         { *m = MetricsState{} }
func (m *MetricsState) String() string { return proto.CompactTextString(m) }
func (*MetricsState) ProtoMessage()    {}
func (*MetricsState) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{9}
}
func (m *MetricsState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsState.Unmarshal(m, b)
}
func (m *MetricsState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsState.Marshal(b, m, deterministic)
}
func (dst *MetricsState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsState.Merge(dst, src)
}
func (m *MetricsState) XXX_Size() int {
	return xxx_messageInfo_MetricsState.Size(m)
}
func (m *MetricsState) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsState.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsState proto.InternalMessageInfo

func (m *MetricsState) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *MetricsState) GetWorkers() int64 {
	if m != nil {
		return m.Workers
	}
	return 0
}

type MetricsEvent struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event                []*MetricsPoint `protobuf:"bytes,3,rep,name=Event,proto3" json:"Event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricsEvent) Reset()         { *m = MetricsEvent{} }
func (m *MetricsEvent) String() string { return proto.CompactTextString(m) }
func (*MetricsEvent) ProtoMessage()    {}
func (*MetricsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_perf_f7a244e343ad29f5, []int{10}
}
func (m *MetricsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsEvent.Unmarshal(m, b)
}
func (m *MetricsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsEvent.Marshal(b, m, deterministic)
}
func (dst *MetricsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsEvent.Merge(dst, src)
}
func (m *MetricsEvent) XXX_Size() int {
	return xxx_messageInfo_MetricsEvent.Size(m)
}
func (m *MetricsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsEvent proto.InternalMessageInfo

func (m *MetricsEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricsEvent) GetEvent() []*MetricsPoint {
	if m != nil {
		return m.Event
	}
	return nil
}

func init() {
	proto.RegisterType((*ResultID)(nil), "sink.ResultID")
	proto.RegisterMapType((map[string]int32)(nil), "sink.ResultID.ArgumentsEntry")
	proto.RegisterType((*MetricsSeriesStart)(nil), "sink.MetricsSeriesStart")
	proto.RegisterType((*ArtifactInfo)(nil), "sink.ArtifactInfo")
	proto.RegisterType((*MetricsSeriesEnd)(nil), "sink.MetricsSeriesEnd")
	proto.RegisterType((*MetricsResponse)(nil), "sink.MetricsResponse")
	proto.RegisterType((*SendResponse)(nil), "sink.SendResponse")
	proto.RegisterType((*MetricsPoint)(nil), "sink.MetricsPoint")
	proto.RegisterType((*MetricsCounters)(nil), "sink.MetricsCounters")
	proto.RegisterType((*MetricsTimers)(nil), "sink.MetricsTimers")
	proto.RegisterType((*MetricsState)(nil), "sink.MetricsState")
	proto.RegisterType((*MetricsEvent)(nil), "sink.MetricsEvent")
	proto.RegisterEnum("sink.StorageLocation", StorageLocation_name, StorageLocation_value)
	proto.RegisterEnum("sink.DataFormat", DataFormat_name, DataFormat_value)
	proto.RegisterEnum("sink.CompressionType", CompressionType_name, CompressionType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SinkPerformanceMetricsClient is the client API for SinkPerformanceMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SinkPerformanceMetricsClient interface {
	CreateMetricSeries(ctx context.Context, in *MetricsSeriesStart, opts ...grpc.CallOption) (*MetricsResponse, error)
	SendMetrics(ctx context.Context, opts ...grpc.CallOption) (SinkPerformanceMetrics_SendMetricsClient, error)
	CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error)
}

type sinkPerformanceMetricsClient struct {
	cc *grpc.ClientConn
}

func NewSinkPerformanceMetricsClient(cc *grpc.ClientConn) SinkPerformanceMetricsClient {
	return &sinkPerformanceMetricsClient{cc}
}

func (c *sinkPerformanceMetricsClient) CreateMetricSeries(ctx context.Context, in *MetricsSeriesStart, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/sink.SinkPerformanceMetrics/CreateMetricSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sinkPerformanceMetricsClient) SendMetrics(ctx context.Context, opts ...grpc.CallOption) (SinkPerformanceMetrics_SendMetricsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SinkPerformanceMetrics_serviceDesc.Streams[0], "/sink.SinkPerformanceMetrics/SendMetrics", opts...)
	if err != nil {
		return nil, err
	}
	x := &sinkPerformanceMetricsSendMetricsClient{stream}
	return x, nil
}

type SinkPerformanceMetrics_SendMetricsClient interface {
	Send(*MetricsEvent) error
	CloseAndRecv() (*SendResponse, error)
	grpc.ClientStream
}

type sinkPerformanceMetricsSendMetricsClient struct {
	grpc.ClientStream
}

func (x *sinkPerformanceMetricsSendMetricsClient) Send(m *MetricsEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sinkPerformanceMetricsSendMetricsClient) CloseAndRecv() (*SendResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sinkPerformanceMetricsClient) CloseMetrics(ctx context.Context, in *MetricsSeriesEnd, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/sink.SinkPerformanceMetrics/CloseMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SinkPerformanceMetricsServer is the server API for SinkPerformanceMetrics service.
type SinkPerformanceMetricsServer interface {
	CreateMetricSeries(context.Context, *MetricsSeriesStart) (*MetricsResponse, error)
	SendMetrics(SinkPerformanceMetrics_SendMetricsServer) error
	CloseMetrics(context.Context, *MetricsSeriesEnd) (*MetricsResponse, error)
}

func RegisterSinkPerformanceMetricsServer(s *grpc.Server, srv SinkPerformanceMetricsServer) {
	s.RegisterService(&_SinkPerformanceMetrics_serviceDesc, srv)
}

func _SinkPerformanceMetrics_CreateMetricSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsSeriesStart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkPerformanceMetricsServer).CreateMetricSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sink.SinkPerformanceMetrics/CreateMetricSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkPerformanceMetricsServer).CreateMetricSeries(ctx, req.(*MetricsSeriesStart))
	}
	return interceptor(ctx, in, info, handler)
}

func _SinkPerformanceMetrics_SendMetrics_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SinkPerformanceMetricsServer).SendMetrics(&sinkPerformanceMetricsSendMetricsServer{stream})
}

type SinkPerformanceMetrics_SendMetricsServer interface {
	SendAndClose(*SendResponse) error
	Recv() (*MetricsEvent, error)
	grpc.ServerStream
}

type sinkPerformanceMetricsSendMetricsServer struct {
	grpc.ServerStream
}

func (x *sinkPerformanceMetricsSendMetricsServer) SendAndClose(m *SendResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sinkPerformanceMetricsSendMetricsServer) Recv() (*MetricsEvent, error) {
	m := new(MetricsEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SinkPerformanceMetrics_CloseMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsSeriesEnd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SinkPerformanceMetricsServer).CloseMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sink.SinkPerformanceMetrics/CloseMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SinkPerformanceMetricsServer).CloseMetrics(ctx, req.(*MetricsSeriesEnd))
	}
	return interceptor(ctx, in, info, handler)
}

var _SinkPerformanceMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sink.SinkPerformanceMetrics",
	HandlerType: (*SinkPerformanceMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetricSeries",
			Handler:    _SinkPerformanceMetrics_CreateMetricSeries_Handler,
		},
		{
			MethodName: "CloseMetrics",
			Handler:    _SinkPerformanceMetrics_CloseMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMetrics",
			Handler:       _SinkPerformanceMetrics_SendMetrics_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "perf.proto",
}

func init() { proto.RegisterFile("perf.proto", fileDescriptor_perf_f7a244e343ad29f5) }

var fileDescriptor_perf_f7a244e343ad29f5 = []byte{
	// 949 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xeb, 0x6e, 0x1a, 0xc7,
	0x17, 0xf7, 0xb2, 0x80, 0xe1, 0xe0, 0xe0, 0xd5, 0xfc, 0xff, 0xb5, 0x28, 0x6d, 0x13, 0x6b, 0x3f,
	0x21, 0x57, 0x22, 0x2d, 0x56, 0x95, 0xaa, 0x69, 0xd4, 0x3a, 0xb0, 0x76, 0xc8, 0x05, 0xd0, 0x2c,
	0x4d, 0x23, 0xbe, 0x58, 0xe3, 0x65, 0x20, 0x2b, 0x60, 0x07, 0xcd, 0xcc, 0x26, 0x75, 0xfb, 0x00,
	0x55, 0xdf, 0xac, 0x6f, 0xd0, 0x17, 0xe8, 0x83, 0x54, 0x73, 0xd9, 0x85, 0x75, 0xda, 0x4a, 0xfd,
	0xb4, 0xe7, 0xf2, 0x3b, 0x67, 0xcf, 0xed, 0x37, 0x00, 0x5b, 0xca, 0x17, 0xdd, 0x2d, 0x67, 0x92,
	0xa1, 0xb2, 0x88, 0x93, 0x55, 0xfb, 0xfe, 0x92, 0xb1, 0xe5, 0x9a, 0x3e, 0xd4, 0xb6, 0x9b, 0x74,
	0xf1, 0x70, 0x9e, 0x72, 0x22, 0x63, 0x96, 0x18, 0x54, 0xfb, 0xc1, 0x5d, 0xbf, 0x8c, 0x37, 0x54,
	0x48, 0xb2, 0xd9, 0x1a, 0x80, 0xff, 0x5b, 0x09, 0x6a, 0x98, 0x8a, 0x74, 0x2d, 0x87, 0x03, 0xf4,
	0x09, 0xd4, 0x25, 0x11, 0xab, 0xeb, 0x84, 0x6c, 0x68, 0xcb, 0x39, 0x75, 0x3a, 0x75, 0x5c, 0x53,
	0x86, 0x11, 0xd9, 0x50, 0xf4, 0x29, 0xd4, 0xe9, 0x4f, 0x34, 0x4a, 0x55, 0xf6, 0x56, 0xe9, 0xd4,
	0xe9, 0x54, 0xf0, 0xce, 0xa0, 0x43, 0xa9, 0x90, 0x26, 0xd4, 0xb5, 0xa1, 0x54, 0x48, 0x1d, 0x7a,
	0x02, 0xd5, 0x2d, 0xe1, 0x34, 0x91, 0xad, 0xb2, 0xf6, 0x58, 0x0d, 0x21, 0x28, 0x4b, 0xb2, 0x14,
	0xad, 0xca, 0xa9, 0xdb, 0xa9, 0x63, 0x2d, 0xa3, 0xc7, 0x50, 0x27, 0x7c, 0x99, 0x6e, 0x68, 0x22,
	0x45, 0xab, 0x7a, 0xea, 0x76, 0x1a, 0xbd, 0xcf, 0xba, 0xaa, 0xd7, 0x6e, 0x56, 0x66, 0xf7, 0x22,
	0xf3, 0x07, 0x89, 0xe4, 0xb7, 0x78, 0x87, 0x6f, 0x7f, 0x0b, 0xcd, 0xa2, 0x13, 0x79, 0xe0, 0xae,
	0xe8, 0xad, 0x6d, 0x46, 0x89, 0xe8, 0xff, 0x50, 0x79, 0x47, 0xd6, 0x29, 0xb5, 0x3d, 0x18, 0xe5,
	0x9b, 0xd2, 0xd7, 0x8e, 0xff, 0xab, 0x03, 0xe8, 0x15, 0x95, 0x3c, 0x8e, 0x44, 0x48, 0x79, 0x4c,
	0x45, 0x28, 0x09, 0x97, 0xe8, 0x3e, 0x94, 0xe2, 0xb9, 0xce, 0xd0, 0xe8, 0x35, 0x8b, 0xa5, 0xe0,
	0x52, 0x3c, 0x47, 0x0f, 0xa0, 0x21, 0x58, 0xca, 0x23, 0x7a, 0xbd, 0x25, 0xf2, 0xad, 0x4e, 0x5b,
	0xc7, 0x60, 0x4c, 0x13, 0x22, 0xdf, 0xa2, 0x2f, 0x54, 0x4b, 0x32, 0x5e, 0x90, 0x48, 0x8a, 0x96,
	0xab, 0x5b, 0x42, 0x26, 0xcf, 0x85, 0x35, 0x0f, 0x93, 0x05, 0xc3, 0x3b, 0x90, 0xff, 0xa7, 0x03,
	0x47, 0xfb, 0x3e, 0xf4, 0x25, 0xd4, 0xd6, 0x2c, 0xd2, 0x9b, 0xd5, 0x95, 0x34, 0x7b, 0x1f, 0x99,
	0x0c, 0xa1, 0x64, 0x9c, 0x2c, 0xe9, 0x4b, 0xeb, 0xc4, 0x39, 0x4c, 0x0d, 0xfd, 0x26, 0x8d, 0x56,
	0x54, 0xda, 0x8a, 0xac, 0xa6, 0x86, 0xae, 0xeb, 0x34, 0x4b, 0xd2, 0x32, 0xea, 0x40, 0x75, 0xc1,
	0xf8, 0x86, 0x98, 0x05, 0x35, 0x7b, 0x9e, 0x49, 0x3e, 0x20, 0x92, 0x5c, 0x6a, 0x3b, 0xb6, 0x7e,
	0xf4, 0x08, 0x1a, 0x11, 0xdb, 0x6c, 0x39, 0x15, 0x42, 0xd5, 0x52, 0xd9, 0xaf, 0xa5, 0xbf, 0x73,
	0x4c, 0x6f, 0xb7, 0x14, 0xef, 0x23, 0xf3, 0x5d, 0x57, 0x77, 0xbb, 0xf6, 0xfb, 0xe0, 0x15, 0xe6,
	0x1d, 0x24, 0x73, 0xd4, 0xcc, 0xa7, 0x5d, 0xcf, 0xa6, 0x1b, 0x8b, 0x6b, 0x95, 0x69, 0x4d, 0xa5,
	0x59, 0x5a, 0x0d, 0x43, 0x2c, 0xfa, 0xd6, 0xe2, 0x3f, 0x86, 0x63, 0x9b, 0x04, 0x53, 0xb1, 0x65,
	0x89, 0xa0, 0x1f, 0xe4, 0x68, 0xc1, 0xa1, 0x48, 0xa3, 0x88, 0x0a, 0x61, 0xe3, 0x33, 0xd5, 0x1f,
	0xc1, 0x51, 0x48, 0x93, 0xf9, 0x7f, 0x8f, 0x54, 0x67, 0x14, 0xb1, 0x34, 0x91, 0x7a, 0x8e, 0x2e,
	0x36, 0x8a, 0xff, 0xbb, 0x03, 0x47, 0xb6, 0x9a, 0x09, 0x8b, 0x13, 0x89, 0xba, 0x50, 0x9e, 0xc6,
	0x96, 0x4d, 0x8d, 0x5e, 0xbb, 0x6b, 0xf8, 0xd8, 0xcd, 0xf8, 0xd8, 0x9d, 0x66, 0x7c, 0xc4, 0x1a,
	0xa7, 0x16, 0xad, 0x33, 0x51, 0x6e, 0xfe, 0xd8, 0xc8, 0x86, 0x6b, 0xb3, 0xf6, 0xad, 0x13, 0xe7,
	0x30, 0xf4, 0x39, 0x54, 0x15, 0xab, 0xb9, 0xd0, 0xa5, 0x34, 0x7a, 0xff, 0x2b, 0x04, 0x4c, 0xb5,
	0x0b, 0x5b, 0x08, 0xea, 0x40, 0x45, 0x48, 0x22, 0xa9, 0x5e, 0x74, 0x7e, 0x87, 0xd9, 0x16, 0x94,
	0x07, 0x1b, 0x80, 0x3f, 0xce, 0xe7, 0x9a, 0xfd, 0x53, 0x91, 0x89, 0x6d, 0x85, 0xee, 0xc5, 0xc5,
	0x4a, 0x54, 0x5b, 0x15, 0xf1, 0xcf, 0x66, 0x2d, 0x2e, 0xd6, 0xb2, 0x3a, 0x3c, 0xca, 0x39, 0xb3,
	0xf5, 0xb8, 0xd8, 0x6a, 0xfe, 0x2f, 0x70, 0xaf, 0x50, 0x13, 0xfa, 0x0a, 0x6a, 0xd9, 0x73, 0x65,
	0xe7, 0xf3, 0xf1, 0x07, 0xf3, 0x19, 0x58, 0x00, 0xce, 0xa1, 0xe8, 0x1c, 0x0e, 0xdf, 0x93, 0x58,
	0xc6, 0xc9, 0xd2, 0x4e, 0xe8, 0x5f, 0xa2, 0x32, 0xa4, 0xff, 0x7d, 0xbe, 0x17, 0xdd, 0xa4, 0x2a,
	0x72, 0x41, 0xe2, 0x35, 0x35, 0xcb, 0xae, 0x61, 0xab, 0xa9, 0x85, 0xbf, 0x67, 0x7c, 0x95, 0x8d,
	0xdf, 0xc5, 0x99, 0xea, 0x3f, 0xcb, 0x33, 0x04, 0xef, 0xd4, 0xe3, 0x75, 0xf7, 0x54, 0x3a, 0x50,
	0xd1, 0x8e, 0x22, 0xc3, 0xf7, 0x8f, 0x01, 0x1b, 0xc0, 0xd9, 0x6b, 0x38, 0xbe, 0x43, 0x5b, 0xd4,
	0x80, 0xc3, 0x1f, 0x46, 0x2f, 0x46, 0xe3, 0x1f, 0x47, 0xde, 0x81, 0x52, 0xc2, 0xe1, 0xe8, 0xc5,
	0x75, 0x78, 0xee, 0x39, 0xa8, 0x09, 0x30, 0xc1, 0xe3, 0xe7, 0x41, 0x7f, 0xaa, 0xf4, 0x12, 0x02,
	0xa8, 0x5e, 0xe1, 0xe1, 0xe0, 0x32, 0xf4, 0x5c, 0x74, 0x0f, 0xea, 0xc1, 0xe4, 0x59, 0xf0, 0x2a,
	0xc0, 0x17, 0x2f, 0xbd, 0xf2, 0xd9, 0x13, 0x80, 0x1d, 0x63, 0x51, 0x0d, 0xca, 0xd3, 0xe0, 0xcd,
	0xd4, 0x3b, 0x50, 0xd2, 0xe5, 0x74, 0xd0, 0xf7, 0x1c, 0x25, 0x3d, 0x0d, 0xc7, 0x23, 0xaf, 0xa4,
	0xa4, 0xe7, 0x4a, 0x72, 0xd1, 0x21, 0xb8, 0xfd, 0xf0, 0xb5, 0x57, 0x3e, 0xfb, 0x0e, 0x8e, 0xef,
	0x30, 0x58, 0xa1, 0x46, 0xe3, 0x51, 0xe0, 0x1d, 0xa0, 0x3a, 0x54, 0xa6, 0x17, 0xf8, 0x6a, 0xe6,
	0x39, 0x2a, 0x60, 0x36, 0x9c, 0x78, 0x25, 0x54, 0x85, 0xd2, 0xd5, 0xcc, 0x73, 0xd5, 0xf7, 0xcd,
	0xcc, 0x2b, 0xf7, 0xfe, 0x70, 0xe0, 0x24, 0x8c, 0x93, 0xd5, 0x84, 0x72, 0xfd, 0x5a, 0x24, 0x11,
	0xb5, 0xed, 0xa3, 0x00, 0x50, 0x9f, 0x53, 0x22, 0xad, 0xc1, 0xd0, 0x1d, 0xb5, 0x8a, 0xd7, 0xb7,
	0x7b, 0x73, 0xdb, 0xc5, 0xa3, 0xcf, 0xe9, 0xf9, 0x08, 0x1a, 0x8a, 0xae, 0x59, 0xd6, 0xe2, 0x8c,
	0xf5, 0x70, 0xdb, 0xd6, 0xb6, 0xcf, 0xea, 0x8e, 0x83, 0x9e, 0xc0, 0x51, 0x7f, 0xcd, 0x44, 0x5e,
	0xcf, 0xc9, 0xdf, 0xfc, 0x39, 0x48, 0xe6, 0xff, 0xf0, 0xdf, 0xa7, 0x30, 0xab, 0xc5, 0x8a, 0x02,
	0x09, 0x59, 0xdf, 0x54, 0xf5, 0x95, 0x9d, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x9a, 0x95,
	0x3e, 0x8d, 0x07, 0x00, 0x00,
}
